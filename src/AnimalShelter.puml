@startuml

@startuml

package Animals {
  class Animal {
    -ID: int
    -nickName: String
    -animalSpecies: String
    -kitStatus: boolean = false
    +Animal(ID: int, nickName: String, animalSpecies: String)
    +getID(): int
    +getNickName(): String
    +getAnimalSpecies(): String
    +getKitStatus(): boolean
    +setKitStatus(): void
    +feeding(): Item
  }
  class Beaver extends Animal {
    +feeding(): Item
  }
  class Coyote extends Animal {
    +feeding(): Item
  }
  class Fox extends Animal {
    +feeding(): Item
  }
  class Porcupine extends Animal {
    +feeding(): Item
  }
  class Raccoon extends Animal {
    +feeding(): Item
  }
}

package Medical {
  class Tasks {
    -TASKID: int
    -DESCRIPTION: String
    -MAXWINDOW: int
    -DURATION: int
    +Tasks(taskID: int, description: String, duration: int, maxWindow: int)
    +getTaskID(): int
    +getDescription(): String
    +getMaxWindow(): int
    +getDuration(): int
  }
  class Treatment {
    -TREATMENTID: int
    -ANIMALID: int
    -TASKID: int
    -startHour: int
    +Treatment(treatmentID: int, animalID: int, taskID: int, startHour: int)
    +getTreatmentID(): int
    +getAnimalID(): int
    +getTaskID(): int
    +getStartHour(): int
    +setStartHour(startHour: int): void
  }
}

package Schedule {
  class ImportData {
    -dbConnection: Connection
    -validTableNames: List<String>
    +ImportData()
    +establishDBConnection(username: String, password: String): boolean
    +importAnimalsTable(): HashMap<Integer, Animal>
    +importTasksTable(): HashMap<Integer, Tasks>
    +importTreatmentsTable(): ArrayList<Treatments>
    +updateTreatmentStartHour(treatmentID: int, newStartHour: int): boolean
    -validateTableName(tableName: String): void
    -createAnimalBySpecies(id: int, nickName: String, species: String): Animal
  }
  class Item {
    -animalID: int
    -taskID: int
    -startHour: int
    -maxWindow: int
    -duration: int
    -treatmentID: int
    +Item(animalID: int, taskID: int, startHour: int, maxWindow: int, duration: int)
    +Item(animalID: int, taskID: int, startHour: int, maxWindow: int, duration: int, treatmentID: int)
    +setStartHour(startHour: int): void
    +getAnimalID(): int
    +getTaskID(): int
    +getStartHour(): int
    +getMaxWindow(): int
    +getDuration(): int
    +getTreatmentID(): int
  }
  class Schedule extends JFrame {
    -importData: ImportData
    -animalHashMap: HashMap<Integer, Animal>
    -tasksHashMap: HashMap<Integer, Tasks>
    -treatmentsArrayList: ArrayList<Treatments>
    -schedule: HashMap<Integer, ArrayList<Item>>
    -foodPrepFeeding: HashMap<Integer, HashMap<String, Boolean>>
    -timeAvailability: HashMap<Integer, Integer>
    -maxTimeAvailability: HashMap<Integer, Integer>
    +Schedule(username: String, password: String)
    +createSchedule(): void
    +addItem(item: Item): boolean
    +addMedical(): ArrayList<Item>
    +addCage(): ArrayList<Item>
    +addFeeding(): ArrayList<Item>
    +formatItem(item: Item): String
    +createTextSchedule(): void
    +createGUIschedule(): void
  }
  ImportData ..> Schedule : imports >
  Schedule "1" -- "*" Item : contains >
  Animal "*" -- "1" Schedule : scheduled in >
  Treatment "*" -- "*" Item : scheduled as >
  Animal -- Item : feeding >
}

@enduml
'note right of Beaver::feeding
'  Specific parameters for Beaver:
'  taskID=0, startHour=8, maxWindow=3, duration=5
'end note
'
'note right of Coyote::feeding
'  Specific parameters for Coyote:
'  taskID=0, startHour=19, maxWindow=3, duration=5
'end note
'
'note right of Fox::feeding
'  Specific parameters for Fox:
'  taskID=0, startHour=0, maxWindow=3, duration=5
'end note
'
'note right of Porcupine::feeding
'  Specific parameters for Porcupine:
'  taskID=0, startHour=19, maxWindow=3, duration=5
'end note
'
'note right of Raccoon::feeding
'  Specific parameters for Raccoon:
'  taskID=0, startHour=0, maxWindow=3, duration=5
'end note

@enduml
