@startuml

@startuml

package Animals {
  class Animal {
    -ID: int
    -nickName: String
    -animalSpecies: String
    -kitStatus: boolean = false
    +Animal(ID: int, nickName: String, animalSpecies: String)
    +getID(): int
    +getNickName(): String
    +getAnimalSpecies(): String
    +getKitStatus(): boolean
    +setKitStatus(): void
    +feeding(): Item
  }
  class Beaver extends Animal {
    +feeding(): Item
  }
  class Coyote extends Animal {
    +feeding(): Item
  }
  class Fox extends Animal {
    +feeding(): Item
  }
  class Porcupine extends Animal {
    +feeding(): Item
  }
  class Raccoon extends Animal {
    +feeding(): Item
  }
}

package Medical {
  class Tasks {
    -TASKID: int
    -DESCRIPTION: String
    -MAXWINDOW: int
    -DURATION: int
    +Tasks(taskID: int, description: String, duration: int, maxWindow: int)
    +getTaskID(): int
    +getDescription(): String
    +getMaxWindow(): int
    +getDuration(): int
  }
  class Treatment {
    -TREATMENTID: int
    -ANIMALID: int
    -TASKID: int
    -startHour: int
    +Treatment(treatmentID: int, animalID: int, taskID: int, startHour: int)
    +getTreatmentID(): int
    +getAnimalID(): int
    +getTaskID(): int
    +getStartHour(): int
    +setStartHour(startHour: int): void
  }
}

package Schedule {
  class ImportData {
    -dbConnection: Connection
    -validTableNames: List<String>
    +ImportData()
    +establishDBConnection(username: String, password: String): boolean
    +importAnimalsTable(): HashMap<Integer, Animal>
    +importTasksTable(): HashMap<Integer, Tasks>
    +importTreatmentsTable(): ArrayList<Treatments>
    +updateTreatmentStartHour(treatmentID: int, newStartHour: int): boolean
    -validateTableName(tableName: String): void
    -createAnimalBySpecies(id: int, nickName: String, species: String): Animal
  }
  class Item {
      - animalID: int
      - taskID: int
      - startHour: int
      - maxWindow: int
      - duration: int
      - treatmentID: int
      - needsVolunteer: boolean
      + Item(animalID: int, taskID: int, startHour: int, maxWindow: int, duration: int)
      + Item(animalID: int, taskID: int, startHour: int, maxWindow: int, duration: int, treatmentID: int)
      + setStartHour(startHour: int): void
      + setNeedsVolunteer(needsVolunteer: boolean): void
      + getAnimalID(): int
      + getTaskID(): int
      + getStartHour(): int
      + getMaxWindow(): int
      + getDuration(): int
      + getTreatmentID(): int
      + getNeedsVolunteer(): boolean
  }
  class Schedule {
      - importData: ImportData
      - animalHashMap: HashMap<Integer, Animal>
      - tasksHashMap: HashMap<Integer, Tasks>
      - treatmentsArrayList: ArrayList<Treatments>
      - schedule: HashMap<Integer, ArrayList<Item>>
      - foodPrepFeeding: HashMap<Integer, HashMap<String, Boolean>>
      - timeAvailability: HashMap<Integer, Integer>
      - maxTimeAvailability: HashMap<Integer, Integer>
      + Schedule(username: String, password: String)
      + createSchedule(): void
      + findHourForVolunteer(item: Item): int
      + handleVolunteerRequired(volunteerHour: int, item: Item, options: String[]): void
      + adjustTimeAvailability(hour: int): void
      + promptReschedule(item: Item): void
      + getTimeAvailabilityForRescheduling(): String
      + addItem(item: Item): boolean
      + adjustDurationForAnimalPrep(hour: int, animalID: int): int
      + addMedical(): ArrayList<Item>
      + addCage(): ArrayList<Item>
      + addFeeding(): ArrayList<Item>
      + formatItem(item: Item, nickNameWidth: int, descriptionWidth: int): String
      + createTextSchedule(): void
      + createGUIschedule(): void
  }
  ImportData ..> Schedule : imports >
  Schedule "1" -- "*" Item : contains >
  Animal "*" -- "1" Schedule : scheduled in >
  Treatment "*" -- "*" Item : scheduled as >
  Animal -- Item : feeding >
}

package GUI{
    class GUI {
        - username: String
        - password: String
        - instruction: String
        - ERRORMESSAGE: String
        - passLabel: JLabel
        - userLabel: JLabel
        + setGUIUsername(): void
        + setGUIPassword(): void
        + getUsername(): String
        + getPassword(): String
        + errorMessage(): void
    }
}

@enduml